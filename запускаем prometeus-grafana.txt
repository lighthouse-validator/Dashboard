возято вот от сюда https://habr.com/ru/articles/652185/

Устанавливаем Node Exporter - на сервер

https://github.com/prometheus/node_exporter -> simple step-by-step guide -> https://prometheus.io/docs/guides/node-exporter/ -> https://prometheus.io/download/#node_exporter

Ищем раздел node_exporter


Копируем ссылку с релизом - например:
https://github.com/prometheus/node_exporter/releases/download/v1.6.0/node_exporter-1.6.0.linux-amd64.tar.gz


скачиваем - разархивируем - запускаем
wget https://github.com/prometheus/node_exporter/releases/download/v1.6.0/node_exporter-1.6.0.linux-amd64.tar.gz

tar xvfz node_exporter-1.6.0.linux-amd64.tar.gz
cd node_exporter-1.6.0.linux-amd64
./node_exporter

должно быть так 
....
ts=2023-06-22T09:38:59.862Z caller=node_exporter.go:117 level=info collector=uname
ts=2023-06-22T09:38:59.862Z caller=node_exporter.go:117 level=info collector=vmstat
ts=2023-06-22T09:38:59.862Z caller=node_exporter.go:117 level=info collector=xfs
ts=2023-06-22T09:38:59.862Z caller=node_exporter.go:117 level=info collector=zfs
ts=2023-06-22T09:38:59.864Z caller=tls_config.go:274 level=info msg="Listening on" address=[::]:9100
ts=2023-06-22T09:38:59.865Z caller=tls_config.go:277 level=info msg="TLS is disabled." http2=false address=[::]:9100

После запуска переходим в браузере по адресу "<server_address>:9100/metrics"
Должны появиться метрики:
....
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 804744
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.446096e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 689
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 6.8692e+06
....

// ставим демона
// Demon Node Exporter

echo "[Unit]
Description=Monitoring Node_Exporter
After=network-online.target
[Service]
User=$USER
ExecStart=/root/node_exporter-1.6.0.linux-amd64/node_exporter
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
" >node_exporter.service
sudo mv node_exporter.service /lib/systemd/system/node_exporter.service

sudo systemctl daemon-reload
sudo systemctl enable node_exporter.service
sudo systemctl restart systemd-journald
sudo systemctl start node_exporter

sudo journalctl -u node_exporter -f

sudo systemctl stop node_exporter
sudo systemctl restart node_exporter
sudo systemctl status node_exporter






Ставим Prometeus на своей комп

https://github.com/prometheus/prometheus -> Install -> Precompiled binaries -> https://prometheus.io/download/ -> раздел prometheus

Копируем ссылку с релизом - например:
https://github.com/prometheus/prometheus/releases/download/v2.44.0/prometheus-2.44.0.linux-amd64.tar.gz

скачиваем - разархивируем - запускаем
wget https://github.com/prometheus/prometheus/releases/download/v2.44.0/prometheus-2.44.0.linux-amd64.tar.gz
tar xvfz prometheus-2.44.0.linux-amd64.tar.gz

// взято от сюда:  https://1cloud.ru/help/monitoring_system_helps/prometheus_install_on_ubuntu

sudo mkdir /etc/prometheus && sudo mkdir /var/lib/prometheus

cd prometheus-2.39.1.linux-amd64
cp prometheus promtool /usr/local/bin/
cp -r console_libraries consoles prometheus.yml /etc/prometheus 

useradd --no-create-home --shell /bin/false prometheus

Назначим пользователя prometheus владельцем каталогов и файлов:

chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus
chown prometheus:prometheus /usr/local/bin/{prometheus,promtool} 

Добавим в конец конфигурационного файла prometheus.yml заранее созданные ноды: 

scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      #- targets: ["localhost:9090", "localhost:9100", "185.193.66.249:9100"]
      - targets: ["localhost:9090"]

  - job_name: "my_comp"
    static_configs:
      - targets: ["localhost:9100"]

  - job_name: "server_bitcanna"
    static_configs:
      - targets: ["185.193.66.249:9100"]
      
      
 // !!!!!!!!!!!!! либо можно через запятую   
static_configs:
    - targets: [‘localhost:9090’, ‘<server_address>:9100’]
//Здесь мы настроили Prometheus на сбор метрик из двух сервисов: самого себя (localhost:9090) и экземпляра Node Exporter (<server_address>:9100).
    
Протестируем работоспособность Prometheus — выполнив команду: 
/usr/local/bin/prometheus --web.listen-address=0.0.0.0:9190
--config.file /etc/prometheus/prometheus.yml
--storage.tsdb.path /var/lib/prometheus/
--web.console.templates=/etc/prometheus/consoles
--web.console.libraries=/etc/prometheus/console_libraries 


После запуска Prometheus можно открыть его пользовательский интерфейс в браузере "localhost:9190". На странице "/targets" отображается статус систем, с которых вы получаете метрики. Если все хорошо, то в колонке статуса (State) будет “UP”.

После ручного запуска Prometheus иногда сбиваются права доступа, поэтому выполним ещё раз команду: chown -R prometheus:prometheus /var/lib/prometheus;

Ставим демона
// Demon Prometheus

echo "[Unit]
Description=Prometheus Service
After=network.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/usr/local/bin/prometheus \
--web.listen-address=0.0.0.0:9190 \
--config.file /etc/prometheus/prometheus.yml \
--storage.tsdb.path /var/lib/prometheus/ \
--web.console.templates=/etc/prometheus/consoles \
--web.console.libraries=/etc/prometheus/console_libraries
ExecReload=/bin/kill -HUP $MAINPID
Restart=on-failure

[Install]
WantedBy=multi-user.target 
" >prometheus.service
sudo mv prometheus.service /etc/systemd/system/prometheus.service


sudo systemctl daemon-reload
sudo systemctl enable prometheus
sudo systemctl restart systemd-journald
sudo systemctl start prometheus
sudo journalctl -u prometheus -f

// sudo systemctl stop prometheus
// sudo systemctl restart prometheus
// sudo systemctl status prometheus

//////////////////////////////////////////////////
Ставим демона для metrics-main
// Demon Bitcanna

echo "[Unit]
Description=Bitcanna Dashboard Service 
After=network-online.target

[Service]
User=root
ExecStart=node /root/project/monitoring/metrics-main.js
WorkingDirectory=/root/project/monitoring
Environment=PATH=/root/go/bin:/usr/bin
Restart=on-failure
RestartSec=10
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target 
" >bitcanna-dashboard.service
sudo mv bitcanna-dashboard.service /etc/systemd/system/bitcanna-dashboard.service

/////// Environment=PATH=/root/go/bin:/usr/bin - надо чтобы указать где лежит bcnad и wget



sudo systemctl stop bitcanna-dashboard
sudo systemctl daemon-reload
sudo systemctl enable bitcanna-dashboard
sudo systemctl restart systemd-journald
sudo systemctl start bitcanna-dashboard
sudo journalctl -u bitcanna-dashboard -f

// sudo systemctl stop bitcanna-dashboard
// sudo systemctl restart bitcanna-dashboard
// sudo systemctl status bitcanna-dashboard



Ставим Grafana на своей комп

https://github.com/grafana/grafana -> Get started -> Installation guides -> https://grafana.com/docs/grafana/latest/setup-grafana/installation/ -> Install Grafana ->  Debian or Ubuntu -> Install Grafana on Debian or Ubuntu
(у меня почему то барахлила установка через apt-get -> ставил через deb-пакет) -> Install Grafana using a deb package or as a standalone binary -> Grafana download page -> https://grafana.com/grafana/download -> Ubuntu and Debian (выбираем OSS - open source)

sudo apt-get install -y adduser libfontconfig1
wget https://dl.grafana.com/oss/release/grafana_9.5.3_amd64.deb
sudo dpkg -i grafana_9.5.3_amd64.deb

После завершения установки перейдите в браузере по адресу "localhost:3000". 
!!!!!!!!! ВАЖНО для удаленки, если графана на одном сервере, а надо открыть на другом надо писать <ip сервера>:3000,
так вот ip надо указать в /etc/grafana/grafana.ini -> 
по умолчанию - ;domain = localhost
надо так - ;domain = 185.193.66.249

Пользователь и пароль по умолчанию "admin"/"admin". При первом входе пароль необходимо будет изменить.

Далее настраиваем графану по инструкции (вторая половина статьи)
https://habr.com/ru/articles/652185/







